Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
solution:
def sortColors(self, nums: List[int]) -> None:

        #Approach1: sort Time: O(nlogn) Space:O(1)
        #Approach2: count 0 1 2 and replace in new array with that many starting with 0 Time: O(n) Space:O(1)
        
        #counting
        zero,ones,twos = 0,0,0
        for i in nums:
            if i==0:
                zero+=1
            elif i==1:
                ones+=1
            else:
                twos+=1
        #replacing
        for i in range(zero):
            nums[i] = 0
        for i in range(zero,zero+ones):
            nums[i]=1
        for i in range(zero+ones,len(nums)):
            nums[i]=2
        
